#!/usr/bin/env ruby
#
# コマンドラインからEpisoPassを開いてパスワード文字列を得る
#

require 'net/http'
require 'uri'
require 'webrick'
require "episopass"

html = ''
arg = ARGV[0]
if arg
  if arg =~ /^http/
    html = Net::HTTP.get(URI.parse(arg))
  elsif File.exist?(arg)
    html = File.read(arg)
  end
else
  # サンプルデータ利用
  html = File.read("#{__dir__}/../data/sample.html") # gemのファイル指定する方法は?
end

opencmd = "open"
opencmd = "xdg-open" if File.exist?("/usr/bin/xdg-open")

server = WEBrick::HTTPServer.new( # サーバを立てる                                                                                                                                                                                   
  :Port => 8000,
  :HTTPVersion => WEBrick::HTTPVersion.new('1.1'),
  :AccessLog => [[open(IO::NULL, 'w'), '']], # アクセスログを出力しない                                                                                                                                                              
  :Logger => WEBrick::Log.new("/dev/null")
)

# パスワード計算後に/EpisoPassResultに移動                                                                                                                                                                         
server.mount_proc('/EpisoPassCall') do |req, res|

  res.status = 200
  res['Content-Type'] = 'text/html'
  res.body = html
end

# /EpisoPassResult?qwerty のような形式でパスワードを返す                                                                                                                                                                            
server.mount_proc('/EpisoPassResult') do |req, res|
  password = URI.decode(req.query_string)
  puts password  # 結果を標準出力
  
  server.shutdown
end

# ブラウザで /EpisoPassCall にアクセスしてパスワード計算画面を開く
system "#{opencmd} http://localhost:8000/EpisoPassCall"

Signal.trap('INT'){server.shutdown}
server.start

